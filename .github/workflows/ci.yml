name: CI

on: [push]

jobs:
  read-config:
    runs-on: ubuntu-latest
    outputs:
      ruby_versions: ${{ steps.read-ruby-versions.outputs.config }}
      node_versions: ${{ steps.read-node-versions.outputs.config }}
    steps:
    - id: read-ruby-versions
      run: |
        JSON=$(cat ruby_versions.json)
        echo "::set-output name=config::${JSON//'%'/'%25'}"
    - id: read-node-versions
      run: |
        JSON=$(cat node_versions.json)
        echo "::set-output name=config::${JSON//'%'/'%25'}"

  buildx:
    runs-on: ubuntu-latest
    needs: read-config
    strategy:
      matrix:
        ruby_version: ${{ fromJSON(needs.read-config.outputs.ruby_versions) }}
        node_version: ${{ fromJSON(needs.read-config.outputs.node_versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Buildx
        uses: docker/build-push-action@v2
        with:
          push: false
          build-args: |
            RUBY_VERSION=${{ matrix.ruby_version }}
            NODE_VERSION=${{ matrix.node_version }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/386,linux/arm/v7,linux/arm/v6
          tags: ${{ matrix.ruby_version }}-${{ matrix.node_version }}-alpine

      - name: Test image
        run: docker run -i ${{ matrix.ruby_version }}-${{ matrix.node_version }}-alpine /bin/sh -c "ruby --version && node --version"
